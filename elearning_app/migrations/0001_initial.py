# Generated by Django 4.2.10 on 2024-04-24 05:24

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=8, null=True, verbose_name='Gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='ZIP Code')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('user_type', models.CharField(blank=True, choices=[('student', 'Student'), ('teacher', 'Teacher'), ('admin', 'Admin'), ('driver', 'Driver'), ('other', 'Other')], max_length=8, null=True, verbose_name='User Type')),
                ('employee_type', models.CharField(blank=True, choices=[('part_time', 'Part Time'), ('full_time', 'Full Time')], max_length=10, null=True, verbose_name='Employee Type')),
                ('photo', models.FileField(blank=True, null=True, upload_to='media/student/profile/')),
                ('mother_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_contact_no', models.CharField(blank=True, max_length=50, null=True)),
                ('father_contact_no', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassDetails',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Class Details',
            },
        ),
        migrations.CreateModel(
            name='CourseDetails',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600), verbose_name='Class Time')),
                ('class_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.classdetails', verbose_name='Class')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Course Details',
            },
        ),
        migrations.CreateModel(
            name='CourseLevel',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('level_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Course Level Name')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Course Level Table',
            },
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('section', models.CharField(max_length=250, verbose_name='Section Name')),
                ('course_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.coursedetails', verbose_name='Course Details')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Course Section',
            },
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('type_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Course Type Name')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Course Type Table',
            },
        ),
        migrations.CreateModel(
            name='EmployeePosition',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Employee Position Name')),
            ],
            options={
                'verbose_name': 'Employee Position Table',
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('otp', models.CharField(max_length=4)),
                ('token', models.CharField(blank=True, max_length=12, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizSection',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('comment', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Comment')),
                ('course_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.coursedetails', verbose_name='Course Name')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Quiz Section',
            },
        ),
        migrations.CreateModel(
            name='CourseSubSection',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sub_section_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='SubSection Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('image', models.FileField(blank=True, null=True, upload_to='media/sub_section_files/', verbose_name='Video/Image')),
                ('course_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.coursesection', verbose_name='Course Section')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Course SubSection',
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('star', models.IntegerField(blank=True, default=0, null=True, verbose_name='Star')),
                ('comment', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Comment')),
                ('course_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.coursedetails', verbose_name='Course Name')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Course Rating Table',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='class_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.classdetails', verbose_name='Class'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elearning_app.employeeposition', verbose_name='Position'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
